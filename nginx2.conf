input {
     file {
      path=> ["/file_bak/nginx_log_back/*.log"]
      type=> "nginx_access"
      start_position=> "beginning"
    }

}

filter {
   grok {
         match => {
                  "message" => "%{HTTPDATE:logdate}%{SPACE}\"%{IP:remote_ip},%{SPACE}%{DATA:forward_ip}\"%{SPACE}%{IP:proxy_ip}%{SPACE}%{HOSTNAME:server_domian}%{SPACE}-%{SPACE}\"%{DATA:request_method}\"%{SPACE}%{NUMBER:status_code}%{SPACE}%{NUMBER:send_byte}%{SPACE}%{DATA:request_body}%{SPACE}\"%{DATA:referer}\"%{SPACE}\"%{DATA:agent}\"%{SPACE}\"%{NUMBER:upstream_time}\"%{SPACE}\"%{NUMBER:request_time}\""
               } 
         match => {
               "forward_ip" => "\"%{IP:client_ip}"
             }
         overwrite => ["message"]
    }
    date {
        match => ["logdate", "dd/MMM/yyyy:HH:mm:ss Z"]
    }
     geoip{
               fields=>["ip","country_name","city_name","real_region_name","location"]
               source => "remote_ip"
           }
}

output {

    if "_grokparsefailure" not in [tags]{
     #stdout {
     #    codec => rubydebug 
     #  }
       elasticsearch {
        hosts => ["127.0.0.1"]
        #protocol => "http"
        index => "logstash-%{type}-%{+YYYY.MM.dd}"
        #index_type => "%{type}"
        workers => 5
        template_overwrite => true
       codec=> json
      }
    }
}

